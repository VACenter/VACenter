<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adminstration | <%= config.vaInfo.name %>
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.5/css/flag-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <%- include('../components/head')%>
</head>

<body class="p-2 p-md-5 pt-4">
    <%- include('../components/nav')%>
        <%- include('../components/adminNav')%>

            <div class="mt-5">
                <h1 class="fw-bold">Pilots <button class="btn btn-primary" data-bs-toggle="modal"
                        data-bs-target="#newPilot"><i class="bi bi-plus-circle-fill"></i> Add Pilot</button></h1>
                <div class="modal fade text-dark" id="newPilot" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <form action="/api/pilots/new" method="POST" class="needs-validation" novalidate>
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Create New Pilot</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center">
                                    <h2 class="fw-bold">New Pilot</h2>
                                    <div class="row row-cols-1">
                                        <div class="col mb-4">
                                            <label for="pilotCallsign" class="form-label">Pilot Callsign</label>
                                            <input type="text" class="form-control" id="pilotCallsign" name="pilotCallsign"
                                                required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid name.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="pilotName" class="form-label">Pilot Name</label>
                                            <input type="text" class="form-control" id="pilotName" name="pilotName" required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid name.
                                            </div>
                                        </div>
                                        <% if(userPerms.has("SUPER_USER")){%>
                                                <div class="col mb-4">
                                                    <label class="form-label">Pilot Permissions</label>
                                                    <div class="row row-cols-1 row-cols-md-2 g-3">
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_aircraft" id="manage_aircraft" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_aircraft"><i class="bi bi-airplane-fill"></i> Manage
                                                                Aircraft</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_route" id="manage_route" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_route"><i class="bi bi-arrow-left-right"></i> Manage
                                                                Routes</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_pirep" id="manage_pirep" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_pirep"><i class="bi bi-file-earmark-text"></i> Manage
                                                                PIREPs</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_event" id="manage_event" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_event"><i class="bi bi-calendar-date"></i> Manage
                                                                Events</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_loa" id="manage_loa" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_loa"><i class="bi bi-calendar-range"></i> Manage
                                                                LOA</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_rank" id="manage_rank" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_rank"><i class="bi bi-arrow-up-circle"></i> Manage
                                                                Ranks</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_codeshare" id="manage_codeshare" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_codeshare"><i class="bi bi-building"></i> Manage
                                                                Codeshare</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_pilot" id="manage_pilot" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_pilot"><i class="bi bi-people"></i> Manage Pilots</label>
                                                        </div>
                                                        <div class="col text-center px-3">
                                                            <input type="checkbox" class="btn-check" name="manage_site" id="manage_site" autocomplete="off">
                                                            <label class="btn btn-primary w-100" for="manage_site"><i class="bi bi-terminal"></i> Manage Site</label>
                                                        </div>
                                                    </div>
                                                </div>
                                        <%}%>
                                        
                                        <div class="col mb-4">
                                            <div class="form-check text-start">
                                                <input class="form-check-input" type="checkbox" value="true" id="manualRank" name="manualRank">
                                                <label class="form-check-label" for="manualRank">
                                                    This user is manually ranked
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col mb-4 d-none" id="manRank">
                                            <label for="rank" class="form-label">Pilot Rank</label>
                                            <select class="form-select" id="rankSelect" name="rank" required>
                                                <% ranks.forEach(rank=>{%>
                                                    <option value="<%= rank.id%>">
                                                        <%= rank.label%>
                                                    </option>
                                                    <%})%>
                                            </select>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="pilotHours" class="form-label">Starting Hours</label>
                                            <input type="number" min="0" class="form-control" id="pilotHours" name="pilotHours" required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid number.
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Create</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="wrapper"></div>
            </div>
            

            <%- include('../components/scripts')%>
                <script src="/public/scripts/progress.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/dist/gridjs.umd.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/plugins/selection/dist/selection.umd.js"></script>
                <script>
                    (function () {
                        'use strict'

                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.querySelectorAll('.needs-validation')

                        // Loop over them and prevent submission
                        Array.prototype.slice.call(forms)
                            .forEach(function (form) {
                                form.addEventListener('submit', function (event) {
                                    if (!form.checkValidity()) {
                                        event.preventDefault()
                                        event.stopPropagation()
                                    }

                                    form.classList.add('was-validated')
                                }, false)
                            })
                    })();

                    const checkbox = document.getElementById('manualRank')

                        checkbox.addEventListener('change', (event) => {
                            if (event.currentTarget.checked) {
                                document.getElementById("manRank").classList.remove("d-none");
                                document.getElementById("rankSelect").removeAttribute("disabled");
                            } else {
                                document.getElementById("manRank").classList.add("d-none");
                                document.getElementById("rankSelect").setAttribute("disabled", "true");
                                
                            }
                        })

                    const grid = new gridjs.Grid({
                        columns: ['Callsign','Name', 'Rank', 'Flags', {
                            name: 'Actions',
                            sort: { enabled: false },
                            formatter: (cell, row) => {
                                return [gridjs.h('a', {
                                    className: "btn btn-primary mx-2",
                                    href: `/admin/pilot/view?id=${row.cells[4].data}`
                                }, 'View User'), gridjs.h('button', {
                                    className: 'btn btn-danger mx-2',
                                    onClick: () => revokeUser(row.cells[4].data, row.cells[5].data)
                                }, `${row.cells[5].data == true ? "Revoke" : "Re-Instate"}`)];
                            }
                        }, {
                                name: "id",
                                hidden: true
                            }, {
                                name: "revoked",
                                hidden: true
                            }],
                        server: {
                            url: '/api/pilots/all',
                            then: data => data.data.map(pilot =>{
                                let flagsArray = [];
                                if(pilot.revoked == 1){
                                    flagsArray.push(gridjs.h("span", {
                                        className: 'badge bg-danger m-1'
                                    }, 'Revoked'));
                                }
                                if(pilot.permissions > 0){
                                    flagsArray.push(gridjs.h("span", {
                                        className: 'badge bg-primary m-1'
                                    }, "Staff"))
                                }
                                return [pilot.callsign, pilot.name, pilot.rank.label, flagsArray.length > 0 ? flagsArray : gridjs.h("span", {className: "badge bg-primary"}, 'None ') , pilot.pilotID, pilot.revoked == 0]
                            })
                        },
                        search: {
                            enabled: true
                        },
                        language: {
                            'search': {
                                'placeholder': '🔍 Search...'
                            }
                        },
                        style: {
                            table: {
                                width: '100%'
                            },
                            td: {
                                overflowX: "scroll"
                            }
                        },
                        className: {
                            td: 'grid-td',
                        },
                        sort: true,
                        pagination: {
                            enabled: true,
                            limit: 10,
                            summary: true
                        }
                    }).render(document.getElementById("wrapper"));

                    grid.on('rowClick', (...args) => console.log(args));

                    function revokeUser(userID) {
                        console.log(userID);
                        const data = `userID=${userID}`;

                        const xhr = new XMLHttpRequest();
                        xhr.withCredentials = true;

                        xhr.addEventListener("readystatechange", function () {
                            if (this.readyState === this.DONE) {
                                if (this.status == 200) {
                                    window.location.reload();
                                } else {
                                    alert("An error occured, see console");
                                    console.error([this.status, this.statusText, this.responseText]);
                                }
                            }
                        });

                        xhr.open("DELETE", "/api/pilots/revoke");
                        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

                        xhr.send(data);
                    }
                </script>
</body>

</html>