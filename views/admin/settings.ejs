<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adminstration | <%= config.vaInfo.name %>
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.5/css/flag-icons.min.css">
    <%- include('../components/head')%>
    <link href="https://cdn.jsdelivr.net/npm/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
</head>

<body class="p-2 p-md-5 pt-4">
    <%- include('../components/nav')%>
    <%- include('../components/adminNav')%>
    <nav class="mt-5">
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <button class="nav-link active" id="nav-updater-tab" data-bs-toggle="tab" data-bs-target="#nav-updater" type="button"
                role="tab" aria-controls="nav-updater" aria-selected="true"><i class="bi bi-cloud-arrow-down"></i> Updates</button>
            <button class="nav-link" id="nav-customlinks-tab" data-bs-toggle="tab" data-bs-target="#nav-customlinks" type="button"
                role="tab" aria-controls="nav-customlinks" aria-selected="false"><i class="bi bi-link-45deg"></i> Custom Links</button>
            <% if(userPerms.has("SUPER_USER")){%><button class="nav-link" id="nav-debug-tab" data-bs-toggle="tab" data-bs-target="#nav-debug" type="button"
                role="tab" aria-controls="nav-debug" aria-selected="false"><i class="bi bi-terminal-fill"></i> Debug</button><%}%>
            <button class="nav-link" id="nav-custom-tab" data-bs-toggle="tab" data-bs-target="#nav-custom" type="button"
                role="tab" aria-controls="nav-custom" aria-selected="false"><i class="bi bi-palette"></i> Customisation</button>
            <button class="nav-link" id="nav-webhooks-tab" data-bs-toggle="tab" data-bs-target="#nav-webhooks" type="button"
                role="tab" aria-controls="nav-webhooks" aria-selected="false"><i class="bi bi-bell-fill"></i> Webhooks</button>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade p-3 show active" id="nav-updater" role="tabpanel" aria-labelledby="nav-updater-tab">
            <h3>Updater</h3><br><br>
            <form class="form-control p-3" method="POST" action="/api/updates/beta">
                <h5>Beta Program</h5>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" name="updateBetaSwitch" id="updateBetaSwitch" <%if(betaChange[0] == true){%>checked<%}%> <%if(betaChange[1] == false){%>disabled<%}%>>
                    <label class="form-check-label" for="updateBetaSwitch">Recieve Beta updates</label>
                    <% if(betaChange[1] == false){%><p>You can not change the beta status until a new version is released.</p><%}%>
                </div>
                <br>
                <button class="btn btn-primary">Update Setting</button>
            </form><br><br>
            <div class="form-control p-3">
                <h5>Check for Updates</h5>
                <button onclick="checkForUpdates();" class="btn btn-primary">Check for Updates</button>
                <p class="d-none" id="updateProgress"><strong>Update Status:</strong> <span id="updateProgressMsg">Sam was here</span></p>
            </div>
        </div>
        <div class="tab-pane fade p-3" id="nav-customlinks" role="tabpanel" aria-labelledby="nav-customlinks-tab">
            <h3>Custom Links<button class="btn btn-primary mx-3" data-bs-toggle="modal" data-bs-target="#newLink"><i class="bi bi-plus-circle-fill"></i>
                Create new Link</button></h3>
            <div class="modal fade text-dark" id="newLink" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <form action="/api/links/new" method="POST" class="needs-validation" novalidate>
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Create New Link</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body text-center">
                                <h2 class="fw-bold">New Link</h2>
                                <div class="row row-cols-1">
                                    <div class="col mb-4">
                                        <label for="linkLabel" class="form-label">Link Label</label>
                                        <input type="text" class="form-control" id="linkLabel" name="linkLabel" required>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Need a valid name.
                                        </div>
                                    </div>
                                    <div class="col mb-4">
                                        <label for="linkURL" class="form-label">Link URL</label>
                                        <input type="url" class="form-control" id="linkURL" name="linkURL" required>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Need a valid URL.
                                        </div>
                                    </div>
                                </div>
            
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div id="customLinkWrapper"></div>
        </div>
        <div class="tab-pane fade p-3" id="nav-debug" role="tabpanel" aria-labelledby="nav-debug-tab">
            <h3>Debug Menu</h3>
            <a href="/logFile" class="btn btn-dark"><i class="bi bi-file-earmark-binary-fill"></i> Download Log File [SENSITIVE]</a>
            <br><br>
            <p>Never give this file to anyone but <a class="link link-primary" href="https://va-center.com/team">verified VACenter staff</a>.</p>
        </div>
        <div class="tab-pane fade p-3" id="nav-custom" role="tabpanel" aria-labelledby="nav-custom-tab">
            Custom
        </div>
        <div class="tab-pane fade p-3" id="nav-webhooks" role="tabpanel" aria-labelledby="nav-webhooks-tab">
            <h3>Webhooks <button class="btn btn-primary mx-2" data-bs-toggle="modal" data-bs-target="#newHook"><i class="bi bi-plus-circle-fill"></i> Create new Webhook</button></h3>
            <div class="modal fade text-dark" id="newHook" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <form action="/api/webhooks/new" method="POST" class="needs-validation" novalidate>
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Create New Webhook</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body text-center">
                                <h2 class="fw-bold">New Webhook</h2>
                                <div class="row row-cols-1">
                                    <div class="col mb-4">
                                        <label for="webhookName" class="form-label">Webhook Label</label>
                                        <input type="text" class="form-control" id="webhookName" name="webhookName" required>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Need a valid name.
                                        </div>
                                    </div>
                                    <div class="col mb-4">
                                        <label for="hookURL" class="form-label">Webhook URL</label>
                                        <input type="url" class="form-control" id="hookURL" name="hookURL" required>
                                        <div class="valid-feedback">
                                            Looks good!
                                        </div>
                                        <div class="invalid-feedback">
                                            Need a valid URL.
                                        </div>
                                    </div>
                                    <div class="col mb-4">
                                        <label for="hookEvents" class="form-label">Events</label>
                                        <select class="form-select" multiple required name="hookEvents">
                                            <option value="newRank">New Rank</option>
                                            <option value="newWebhook">New Webhook</option>
                                        </select>
                                        <div class="invalid-feedback">
                                            Need to select alteast one event.
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="form-check text-start">
                                            <input class="form-check-input" type="checkbox" value="true" id="discordHook"
                                                name="discordHook">
                                            <label class="form-check-label" for="discordHook">
                                                This is a discord webhook
                                            </label>
                                        </div>
                                    </div>
                                </div>
            
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div id="webhookWrapper"></div>
        </div>
    </div>
    <%- include('../components/scripts')%>
    <script src="/public/scripts/progress.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/gridjs/dist/gridjs.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/gridjs/plugins/selection/dist/selection.umd.js"></script>
    <script src="/public/scripts/settings.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        let cookieList = document.cookie.split("; ");
            let cookie = "";
            cookieList.forEach(lcookie => {
                if (lcookie.slice(0, 17) == "vacenterAUTHTOKEN") {
                    cookie = lcookie.split("=")[1];
                }
            })    
        var socket = io({
                auth: {
                    token: cookie
                }
            });

        function checkForUpdates(){
            swal({
                title: "Are you sure?",
                text: "Are you sure you want to check for updates?",
                icon: "warning",
                buttons: { 'no': "No", yes: { closeModal: false, text: 'Yes', className: 'bg-danger' } },
                dangerMode: true
            }).then((value => {
                if (value == 'yes') {
                    socket.emit('checkUpdate');
                }
            }))
        }

        socket.on('checkUpdateRes', (data)=>{
            if(data[0] == true){
                swal({
                    title: "Success!",
                    text: `${data[1]} is available for download. Do you want to proceed with the install?`,
                    icon: "info",
                    buttons: { 'no': "No", yes: { closeModal: false, text: 'Yes'} },
                }).then((value => {
                    if (value == 'yes') {
                        swal({
                            title: "Are you sure?",
                            text: `Are you sure you want to install VACenter ${data[1]}?`,
                            icon: "warning",
                            buttons: { 'no': "No", yes: {text: 'Yes', className: 'bg-danger' } },
                            dangerMode: true
                        }).then((value => {
                            if (value == 'yes') {
                                socket.emit("update", data[1]);
                            }
                        }))
                    }
                }))
            }else{
                switch(data[1]){
                    case "noPerms":
                        swal("Oh no!", "You can't do that because you don't have permission", 'error');
                        break;
                    case "noUser":
                        swal("Oh no!", "You can't do that because you aren't signed in. It's possible the server just restarted.", 'error');
                        break;
                    case "noUpdate":
                        swal("Update", "You are up to date!", "info");
                        break;
                    default:
                        swal("Oh no!", "An unknown error occured", "error");
                        break;
                }
            }
        })
        socket.on('updateRes', (data)=>{
            if(data[0] == false){
                swal("Update failed", data[1], 'error');
            }else{
                document.getElementById('updateProgress').classList.remove('d-none');
                const updateProgress = document.getElementById("updateProgressMsg");
                switch (data[1]) {
                    case "downloadingUpdateFile":
                        updateProgress.innerHTML = "Downloading update file...";
                        break;
                    case "downloadSQL":
                        updateProgress.innerHTML = "Downloading SQL file...";
                        break;
                    default:
                        updateprogress.innerHTML = "Unknown";
                        break;
                }
            }
        })
    
    </script>
</body>

</html>