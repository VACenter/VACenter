<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adminstration | <%= config.vaInfo.name %>
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.5/css/flag-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <%- include('../components/head')%>
</head>

<body class="p-2 p-md-5 pt-4">
    <%- include('../components/nav')%>
        <%- include('../components/adminNav')%>

            <div class="mt-5">
                <h1 class="fw-bold">Routes <button class="btn btn-primary" data-bs-toggle="modal"
                        data-bs-target="#newVA"><i class="bi bi-plus-circle-fill"></i> Add Route</button></h1>
                <div class="modal fade text-dark" id="newVA" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <form action="/api/routes/new" method="POST" class="needs-validation" novalidate>
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Create New Route</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center">
                                    <h2 class="fw-bold">New Route</h2>
                                    <div class="row row-cols-1">
                                        <div class="col mb-4">
                                            <label for="routeNum" class="form-label">Route Number</label>
                                            <input type="text" placeholder="<%= config.vaInfo.code%>000" class="form-control" id="routeNum"
                                                name="routeNum" required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid route number.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="depICAO" class="form-label">Departure ICAO</label>
                                            <input type="text" minlength="4" maxlength="4" placeholder="YMML" class="form-control" id="depICAO"
                                                name="depICAO" required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid ICAO.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="arrICAO" class="form-label">Arrival ICAO</label>
                                            <input type="text" minlength="4" maxlength="4" placeholder="YSSY" class="form-control" id="arrICAO" name="arrICAO" required>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid ICAO.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="aircraft" class="form-label">Aircraft</label>
                                            <select class="form-select" multiple id="aircraft" name="aircraft" required>
                                                <% aircraft.forEach(aircraft=>{%>
                                                    <option value="<%= aircraft.liveryID%>">
                                                        <%= aircraft.liveryName + " - " + aircraft.aircraftName%>
                                                    </option>
                                                    <%})%>
                                            </select>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid rank.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="minRank" class="form-label">Minimum Rank</label>
                                            <select class="form-select" id="rankSelect" name="minRank" required>
                                                <% ranks.forEach(rank=>{%>
                                                    <option value="<%= rank.minHours%>">
                                                        <%= rank.label%>
                                                    </option>
                                                    <%})%>
                                            </select>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid rank.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Create</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="wrapper"></div>
            </div>


            <%- include('../components/scripts')%>
                <script src="/public/scripts/progress.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/dist/gridjs.umd.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/plugins/selection/dist/selection.umd.js"></script>
                <script>
                    (function () {
                        'use strict'

                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.querySelectorAll('.needs-validation')

                        // Loop over them and prevent submission
                        Array.prototype.slice.call(forms)
                            .forEach(function (form) {
                                form.addEventListener('submit', function (event) {
                                    if (!form.checkValidity()) {
                                        event.preventDefault()
                                        event.stopPropagation()
                                    }

                                    form.classList.add('was-validated')
                                }, false)
                            })
                    })();

                    const grid = new gridjs.Grid({
                            columns: ['Number', 'Departure', 'Arrival', 'Minimum Hours', {
                                name: 'Actions',
                                sort: { enabled: false },
                                formatter: (cell, row) => {
                                    return [gridjs.h('a', {
                                        className: "btn btn-primary mx-2",
                                        href: `/admin/routes/view?id=${row.cells[4].data}`
                                    }, 'View Route'), gridjs.h('button', {
                                        className: 'btn btn-danger mx-2',
                                        onClick: () => deleteRoute(row.cells[4].data)
                                    }, `Remove`)];
                                }
                            }, {
                                    name: "id",
                                    hidden: true
                                }, {
                                    name: "revoked",
                                    hidden: true
                                }],
                            server: {
                                url: '/api/routes/all',
                                then: data => data.data.map(route => {
                                    return [route.routeNumber, route.departureICAO, route.arrivalICAO, route.minHours, route.id]
                                })
                            },
                            search: {
                                enabled: true
                            },
                            language: {
                                'search': {
                                    'placeholder': '🔍 Search...'
                                }
                            },
                            style: {
                                table: {
                                    width: '100%'
                                },
                                td: {
                                    overflowX: "scroll"
                                }
                            },
                            className: {
                                td: 'grid-td',
                            },
                            sort: true,
                            pagination: {
                                enabled: true,
                                limit: 10,
                                summary: true
                            }
                        }).render(document.getElementById("wrapper"));

                    function deleteRoute(routeID) {
                        const data = `routeID=${routeID}`;

                        const xhr = new XMLHttpRequest();
                        xhr.withCredentials = true;

                        xhr.addEventListener("readystatechange", function () {
                            if (this.readyState === this.DONE) {
                                if (this.status == 200) {
                                    window.location.reload();
                                } else {
                                    alert("An error occured, see console");
                                    console.error([this.status, this.statusText, this.responseText]);
                                }
                            }
                        });

                        xhr.open("DELETE", "/api/routes/delete");
                        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

                        xhr.send(data);
                    }
                </script>
</body>

</html>